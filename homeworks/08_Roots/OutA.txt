Testing Function: f(x) = x * exp(-x^2)
Using initial guesses: -0.4, 0.1, 0.6

Initial guess: v0 = -0.4
Result: x_min = -2.86474964813523E-08
Function value at x_min: f(x_min) = -2.86474964813522E-08
Steps taken: 3, Function evaluations: 8

Initial guess: v0 = 0.1
Result: x_min = 1.69996617099995E-08
Function value at x_min: f(x_min) = 1.69996617099995E-08
Steps taken: 2, Function evaluations: 5

Initial guess: v0 = 0.6
Result: x_min = -3.2634717652074
Function value at x_min: f(x_min) = -7.73278505963105E-05
Steps taken: 8, Function evaluations: 17

Testing Function: (x, y) -> (1 + xy, 1 - x^2)
Using initial guesses: (-0.6, 0.01), (0, -0.01), (0.01, 0.6)

Initial guess: v0 = (-0.6, 0)
Result: x_min = (-1.00000000135524, 1.00000000425829)
Function value at (x_min, y_min): f(x_min, y_min) = (-5.61353674655152E-09, -2.7104869460004E-09)
Steps taken: 4, Function evaluations: 14

Initial guess: v0 = (0.01, -0.01)
Result: x_min = (1.0000000682763, -1.00000006826507)
Function value at (x_min, y_min): f(x_min, y_min) = (-1.36541371098531E-07, -1.36552600560336E-07)
Steps taken: 4, Function evaluations: 19

Initial guess: v0 = (0.01, 0.6)
Result: x_min = (1.00000587745089, -0.999996762288982)
Function value at (x_min, y_min): f(x_min, y_min) = (-2.63972084213471E-06, -1.17549363243263E-05)
Steps taken: 17, Function evaluations: 158

Testing Function: f(x) = ((x - 1)^2, ln(x))
Using initial guesses: 0.4, 1.1, 1.9

Initial guess: x0 = 0.4
Result: x_min = 0.999999361173804
Function values at x_min: f(x_min) = (4.0809890848019E-13, -6.38826399880763E-07)
Steps taken: 4, Function evaluations: 9

Initial guess: x0 = 1.1
Result: x_min = 0.999997306782921
Function values at x_min: f(x_min) = (7.25341823292819E-12, -2.69322070540204E-06)
Steps taken: 2, Function evaluations: 5

Initial guess: x0 = 1.9
Result: x_min = 0.999998557896277
Function values at x_min: f(x_min) = (2.0796631475495E-12, -1.44210476271436E-06)
Steps taken: 4, Function evaluations: 9

Testing Rosenbrock function (a = 1, b = 100)
Using initial guesses: (1.8, 0.2), (0.2, 0.2), (0.2, 1.8)

Initial guess: v0 = (1.8, 0.2)
Result: v_min = (1.00000312319617, 1.00000618703666)
Function value at v_min: f(v_min) = 1.01067798641931E-11
Gradient at v_min: df(v_min) = (2.99926422877142E-05, -1.18730878906348E-05)
Steps taken: 500, Function evaluations: 5530

Initial guess: v0 = (0.2, 0.2)
Result: v_min = (0.999999805884328, 0.999999608531543)
Function value at v_min: f(v_min) = 3.87288082453065E-14
Gradient at v_min: df(v_min) = (9.066284010225E-07, -6.47429998501536E-07)
Steps taken: 198, Function evaluations: 1652

Initial guess: v0 = (0.2, 1.8)
Result: v_min = (0.999999678237562, 0.999999350977481)
Function value at v_min: f(v_min) = 1.06553588354719E-13
Gradient at v_min: df(v_min) = (1.55557305266061E-06, -1.09954931826195E-06)
Steps taken: 195, Function evaluations: 1631

Testing Himmelblau's function
Using initial guesses: (3.9, -2.1), (-2.9, 2.9), (-2.1, -2.1), (3.9, 2.1)

Initial guess: v0 = (3.9, 3.9)
Result: v_min = (2.99999952912638, 2.00000211509333)
Function value at v_min: f(v_min) = 6.43364872864796E-11
Gradient at v_min: df(v_min) = (7.45723183467001E-06, 3.05377541708517E-05)
Steps taken: 5, Function evaluations: 16

Initial guess: v0 = (-2.1, 2.1)
Result: v_min = (-2.80511815498074, 3.13131396804915)
Function value at v_min: f(v_min) = 8.45616898906166E-11
Gradient at v_min: df(v_min) = (-2.52671570556648E-06, 6.00986939945511E-05)
Steps taken: 3, Function evaluations: 11

Initial guess: v0 = (-2.9, -2.1)
Result: v_min = (-3.77931035832373, -3.28318616658928)
Function value at v_min: f(v_min) = 1.47630414954508E-12
Gradient at v_min: df(v_min) = (-7.24928553224944E-06, -5.63358533706176E-06)
Steps taken: 4, Function evaluations: 16

Initial guess: v0 = (2.9, -2.1)
Result: v_min = (3.58442835544627, -1.84812665840056)
Function value at v_min: f(v_min) = 2.5147033619606E-13
Gradient at v_min: df(v_min) = (6.71055597758236E-07, -1.89773697227609E-06)
Steps taken: 4, Function evaluations: 14

